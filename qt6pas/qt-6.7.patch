diff --git a/lcl/interfaces/qt6/cbindings/src/qstring_c.cpp b/lcl/interfaces/qt6/cbindings/src/qstring_c.cpp
index 9cb602ebc0..d3d5058480 100644
--- a/lcl/interfaces/qt6/cbindings/src/qstring_c.cpp
+++ b/lcl/interfaces/qt6/cbindings/src/qstring_c.cpp
@@ -1073,11 +1073,6 @@ bool QString_isNull(QStringH handle)
 	return (bool) ((QString *)handle)->isNull();
 }
 
-bool QString_isSimpleText(QStringH handle)
-{
-	return (bool) ((QString *)handle)->isSimpleText();
-}
-
 bool QString_isRightToLeft(QStringH handle)
 {
 	return (bool) ((QString *)handle)->isRightToLeft();
diff --git a/lcl/interfaces/qt6/cbindings/src/qstring_c.h b/lcl/interfaces/qt6/cbindings/src/qstring_c.h
index 6f0b671520..377ef5a133 100644
--- a/lcl/interfaces/qt6/cbindings/src/qstring_c.h
+++ b/lcl/interfaces/qt6/cbindings/src/qstring_c.h
@@ -166,7 +166,6 @@ C_EXPORT void QString_push_back2(QStringH handle, PWideString s);
 C_EXPORT void QString_push_front(QStringH handle, PWideChar c);
 C_EXPORT void QString_push_front2(QStringH handle, PWideString s);
 C_EXPORT bool QString_isNull(QStringH handle);
-C_EXPORT bool QString_isSimpleText(QStringH handle);
 C_EXPORT bool QString_isRightToLeft(QStringH handle);
 C_EXPORT void QString_chopped(QStringH handle, int len, PWideString retval);
 C_EXPORT void QString_first(QStringH handle, int n, PWideString retval);
diff --git a/lcl/interfaces/qt6/qt62.pas b/lcl/interfaces/qt6/qt62.pas
index 9def6242a2..bef59bfc9b 100644
--- a/lcl/interfaces/qt6/qt62.pas
+++ b/lcl/interfaces/qt6/qt62.pas
@@ -3214,7 +3214,6 @@ procedure QString_push_back(handle: QStringH; s: PWideString); cdecl; external Q
 procedure QString_push_front(handle: QStringH; c: PWideChar); cdecl; external Qt6PasLib name 'QString_push_front';
 procedure QString_push_front(handle: QStringH; s: PWideString); cdecl; external Qt6PasLib name 'QString_push_front2';
 function QString_isNull(handle: QStringH): Boolean; cdecl; external Qt6PasLib name 'QString_isNull';
-function QString_isSimpleText(handle: QStringH): Boolean; cdecl; external Qt6PasLib name 'QString_isSimpleText';
 function QString_isRightToLeft(handle: QStringH): Boolean; cdecl; external Qt6PasLib name 'QString_isRightToLeft';
 function QString_Create(size: Integer; AnonParam2: QtInitialization): QStringH; cdecl; external Qt6PasLib name 'QString_Create8';
 procedure QString_chopped(handle: QStringH; len: integer; retval: PWideString); cdecl; external Qt6PasLib name 'QString_chopped';
