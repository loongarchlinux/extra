# Maintainer: George Rawlinson <grawlinson@archlinux.org>
# Contributor: OSAMC <https://github.com/osam-cologne/archlinux-proaudio>
# Contributor: Bleuzen <supgesu at gmail dot com>
# Contributor: David Runge <dvzrv@archlinux.org>
# Contributor: Florian Hülsmann <fh@cbix.de>

pkgbase=surge-xt
pkgname=(
  'surge-xt'
  'surge-xt-common'
  'surge-xt-standalone'
  'surge-xt-vst3'
  'surge-xt-clap'
)
pkgver=1.3.4
pkgrel=1
pkgdesc='Subtractive hybrid synthesizer'
arch=('loong64' 'x86_64')
url='https://surge-synthesizer.github.io'
license=('GPL-3.0-only')
groups=('pro-audio')
_common_depends=(
  'glibc'
  'gcc-libs'
  'cairo'
  'fontconfig'
  'freetype2'
  'libx11'
  'libxcb'
  'libxkbcommon-x11'
  'xcb-util'
  'xcb-util-cursor'
  'xcb-util-image'
  'xcb-util-keysyms'
  'xcb-util-renderutil'
  'xdg-utils'
  'fmt'
  'libsamplerate'
)
makedepends=(
  "${_common_depends[@]}"
  'git'
  'cmake'
  'libsndfile'
  'python'
  'libxrandr'
  'libxinerama'
  'libxcursor'
  'alsa-lib'
  'jack'
  'webkit2gtk'
  'ripgrep'
  'juce'
)
options=('!lto') # LTO disabled due to crashes at application startup
source=(
  "$pkgbase::git+https://github.com/surge-synthesizer/surge#tag=release_xt_$pkgver"
  'improve-reproducibility.patch'
  'devendor-libs.patch'
  'github.com-surge-synthesizer-tuning-library::git+https://github.com/surge-synthesizer/tuning-library'
  'github.com-surge-synthesizer-eurorack::git+https://github.com/surge-synthesizer/eurorack'
  'github.com-surge-synthesizer-JUCE::git+https://github.com/surge-synthesizer/JUCE'
  'github.com-surge-synthesizer-sst-basic-blocks::git+https://github.com/surge-synthesizer/sst-basic-blocks'
  'github.com-surge-synthesizer-sst-cpputils::git+https://github.com/surge-synthesizer/sst-cpputils'
  'github.com-surge-synthesizer-sst-effects::git+https://github.com/surge-synthesizer/sst-effects'
  'github.com-surge-synthesizer-sst-filters::git+https://github.com/surge-synthesizer/sst-filters'
  'github.com-surge-synthesizer-sst-plugininfra::git+https://github.com/surge-synthesizer/sst-plugininfra'
  'github.com-surge-synthesizer-sst-waveshapers::git+https://github.com/surge-synthesizer/sst-waveshapers'
  'github.com-surge-synthesizer-pffft::git+https://github.com/surge-synthesizer/pffft'
  'github.com-free-audio-clap::git+https://github.com/free-audio/clap'
  'github.com-free-audio-clap-helpers::git+https://github.com/free-audio/clap-helpers'
  'github.com-free-audio-clap-juce-extensions::git+https://github.com/free-audio/clap-juce-extensions'
  'github.com-simd-everywhere-simde::git+https://github.com/simd-everywhere/simde'
  'github.com-ODDSound-MTS-ESP::git+https://github.com/ODDSound/MTS-ESP'
  'github.com-LuaJIT-LuaJIT::git+https://github.com/LuaJIT/LuaJIT'
  'github.com-taocpp-PEGTL::git+https://github.com/taocpp/PEGTL'
  'github.com-gulrak-filesystem::git+https://github.com/gulrak/filesystem'
  'github.com-sudara-melatonin_inspector::git+https://github.com/sudara/melatonin_inspector'
)
sha512sums=('7b867ebcb3cf4e69b1ada886b4ccd68504c1ba5180fe5ecd8ad3840629652a661b48ea46164de54947156ef87c80762ca923f5b92753908e3bb58801cac9eec3'
            'e661bbc72cb09b8f5e245e984e46aed8b773b87075e6002fb5047266c61279b689e9713a9e096a9e8893ee20cd43e25a9fc159cf0f8dce26e1744b0961b14ec7'
            '8bfc7080a2940cef2c94bf88f81624369182bc7ae7bcc211d730e333972a584505a7ac32184fd523f7e543a4dd46db5c005b3253394f9671a9d2031d270ff9fc'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')
b2sums=('f39026d38c263e4ab44d15aa8e725b603a8653b01ca6059386555801568c9445a8c73fc470b6f80f2aba13428c526e61fa5dbb4a8f3620800c1eaf68a5382c2f'
        '6e71b56ffde699319def99e03637d9c3fb6197a6e0637b9f44b52a9207a8e06c8d482c05cdd711ec2c5901f403381dda70e786bca6b56cce14dc449325f24761'
        'c7c41fbfbdb84480911d0d006d3a76b95d2c3334acc49e83a26ae658de0eccaa5c42e933d588ea6385e75b9ff3f7a43366730d14e28fbdf54086c515c914d389'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP'
        'SKIP')

prepare() {
  cd "$pkgbase"

  # explicitly state which submodules to use,
  # omitting devendored & unused submodules
  git submodule init \
    libs/tuning-library \
    libs/simde \
    libs/eurorack/eurorack \
    libs/oddsound-mts/MTS-ESP \
    libs/JUCE \
    libs/LuaJitLib/LuaJIT \
    libs/PEGTL \
    libs/sst/sst-basic-blocks \
    libs/sst/sst-plugininfra \
    libs/sst/sst-cpputils \
    libs/clap-juce-extensions \
    libs/sst/sst-effects \
    libs/sst/sst-filters \
    libs/sst/sst-waveshapers \
    libs/pffft \
    libs/melatonin_inspector

  git config submodule.libs/tuning-library.url "$srcdir/github.com-surge-synthesizer-tuning-library"
  git config submodule.libs/simde.url "$srcdir/github.com-simd-everywhere-simde"
  git config submodule.libs/eurorack/eurorack.url "$srcdir/github.com-surge-synthesizer-eurorack"
  git config submodule.libs/oddsound-mts/MTS-ESP.url "$srcdir/github.com-ODDSound-MTS-ESP"
  git config submodule.libs/JUCE.url "$srcdir/github.com-surge-synthesizer-JUCE"
  git config submodule.libs/LuaJitLib/LuaJIT.url "$srcdir/github.com-LuaJIT-LuaJIT"
  git config submodule.libs/PEGTL.url "$srcdir/github.com-taocpp-PEGTL"
  git config submodule.libs/sst/sst-effects.url "$srcdir/github.com-surge-synthesizer-sst-effects"
  git config submodule.libs/sst/sst-basic-blocks.url "$srcdir/github.com-surge-synthesizer-sst-basic-blocks"
  git config submodule.libs/sst/sst-plugininfra.url "$srcdir/github.com-surge-synthesizer-sst-plugininfra"
  git config submodule.libs/sst/sst-cpputils.url "$srcdir/github.com-surge-synthesizer-sst-cpputils"
  git config submodule.libs/clap-juce-extensions.url "$srcdir/github.com-free-audio-clap-juce-extensions"
  git config submodule.libs/sst/sst-filters.url "$srcdir/github.com-surge-synthesizer-sst-filters"
  git config submodule.libs/sst/sst-waveshapers.url "$srcdir/github.com-surge-synthesizer-sst-waveshapers"
  git config submodule.libs/pffft.url "$srcdir/github.com-surge-synthesizer-pffft"
  git config submodule.libs/melatonin_inspector.url "$srcdir/github.com-sudara-melatonin_inspector"

  git -c protocol.file.allow=always submodule update

  # setup git submodules for clap-juce-extensions
  pushd libs/clap-juce-extensions
  git submodule init
  git config submodule.clap-libs/clap.url "$srcdir/github.com-free-audio-clap"
  git config submodule.clap-libs/clap-helpers.url "$srcdir/github.com-free-audio-clap-helpers"
  git -c protocol.file.allow=always submodule update
  popd

  # setup git submodules for sst-plugininfra
  pushd libs/sst/sst-plugininfra
  git submodule init
  git config submodule.libs/filesystem/filesystem.url "$srcdir/github.com-gulrak-filesystem"
  git -c protocol.file.allow=always submodule update
  popd

  # first shot at improving reproducibility:
  # https://github.com/surge-synthesizer/surge/issues/2389
  patch -p1 -i "$srcdir/improve-reproducibility.patch"

  # devendor libs
  patch -p1 -i "$srcdir/devendor-libs.patch"
  rg --files-with-matches 'include "fmt/core.h"' | xargs -I@ sed 's|"fmt/core.h"|<fmt/core.h>|g' -i @
  rg --files-with-matches 'include "samplerate.h"' | xargs -I@ sed 's|"samplerate.h"|<samplerate.h>|g' -i @
}

build() {
  # binaries and shared libs have executable stack:
  # https://github.com/surge-synthesizer/surge/issues/1701
  export LDFLAGS="$LDFLAGS,-z,noexecstack"

  cmake \
    -B build \
    -S "$pkgbase" \
    -D CMAKE_INSTALL_PREFIX='/usr' \
    -D CMAKE_INSTALL_LIBDIR='/usr/lib' \
    -D CMAKE_BUILD_TYPE=Release \
    -W no-dev \
    -D SURGE_BUILD_TESTRUNNER=OFF

  cmake --build build
}

package_surge-xt() {
  depends=($pkgbase-{common,standalone,vst3,clap}=$pkgver)

  # complete install, followed by…
  DESTDIR="$pkgdir" cmake --install build

  # …moving items out for split packages…
  mv "$pkgdir/usr/share/surge-xt" usr-share
  mv "$pkgdir/usr/bin" usr-bin
  mv "$pkgdir/usr/lib" usr-lib

  # …then remove leftovers
  rm -rvf "$pkgdir/usr"
}

package_surge-xt-common() {
  pkgdesc='Common files for Surge XT'

  install -vd "$pkgdir/usr/share/surge-xt"
  mv usr-share/* "$pkgdir/usr/share/surge-xt"

  cd "$pkgbase"

  # documentation
  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgbase" AUTHORS README.md doc/*
}

package_surge-xt-standalone() {
  pkgdesc+=' - standalone'
  depends=(
    "surge-xt-common=$pkgver"
    'hicolor-icon-theme'
    "${_common_depends[@]}"
  )
  optdepends=(
    'jack: audio backend'
    'alsa-lib: audio backend'
  )

  # binaries
  install -vd "$pkgdir/usr/bin"
  mv usr-bin/* "$pkgdir/usr/bin"

  cd "$pkgbase"

  # application icons & desktop files
  install -vd "$pkgdir/usr/share/"{applications,icons}
  cd scripts/installer_linux
  cp -r assets/icons/hicolor "$pkgdir/usr/share/icons"
  cp -r assets/icons/scalable "$pkgdir/usr/share/icons/hicolor"
  install -vDm644 -t "$pkgdir/usr/share/applications" assets/applications/*.desktop
}

package_surge-xt-vst3(){
  pkgdesc+=' - VST3 plugin'
  groups+=('vst3-plugins')
  depends=(
    "surge-xt-common=$pkgver"
    "${_common_depends[@]}"
    'vst3-host'
  )

  install -vd "$pkgdir/usr/lib"
  mv usr-lib/vst3 "$pkgdir/usr/lib"
}

package_surge-xt-clap(){
  pkgdesc+=' - CLAP plugin'
  groups+=('clap-plugins')
  depends=(
    "surge-xt-common=$pkgver"
    "${_common_depends[@]}"
    'clap-host'
  )

  install -vd "$pkgdir/usr/lib"
  mv usr-lib/clap "$pkgdir/usr/lib"
}
