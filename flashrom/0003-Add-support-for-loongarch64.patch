From 43c4fa9cd8cc408f4df4d8ce02c817f70be5ae97 Mon Sep 17 00:00:00 2001
From: Xiaotian Wu <wuxiaotian@loongson.cn>
Date: Wed, 11 May 2022 21:32:59 +0800
Subject: [PATCH 3/3] Add support for loongarch64

Change-Id: I58f40f69487d515fd4c95ec5dd57fd370c9e55ec
Signed-off-by: Xiaotian Wu <wuxiaotian@loongson.cn>
---
 Makefile          | 14 +++++++-------
 flashrom.c        | 12 ++++++++++++
 hwaccess.h        |  4 ++++
 loongson3_spi.c   | 15 +++++++++++----
 meson.build       |  6 ++++++
 meson_options.txt |  1 +
 platform.h        |  5 ++++-
 programmer.h      |  3 +++
 8 files changed, 48 insertions(+), 12 deletions(-)

diff --git a/Makefile b/Makefile
index 4793433..ef611be 100644
--- a/Makefile
+++ b/Makefile
@@ -106,7 +106,7 @@ endif
 # IMPORTANT: The following line must be placed before TARGET_OS is ever used
 # (of course), but should come after any lines setting CC because the line
 # below uses CC itself.
-override TARGET_OS := $(strip $(call debug_shell,$(CC) $(CPPFLAGS) -E os.h 2>/dev/null | grep -v '^\#' | grep '"' | cut -f 2 -d'"'))
+override TARGET_OS := $(strip $(call debug_shell,$(CC) $(CPPFLAGS) -E os.h 2>/dev/null | grep -v '^\#' | tail -n 1 | grep '"' | cut -f 2 -d'"'))
 
 ifeq ($(TARGET_OS), Darwin)
 override CPPFLAGS += -I/opt/local/include -I/usr/local/include
@@ -421,7 +421,7 @@ endif
 # IMPORTANT: The following line must be placed before ARCH is ever used
 # (of course), but should come after any lines setting CC because the line
 # below uses CC itself.
-override ARCH := $(strip $(call debug_shell,$(CC) $(CPPFLAGS) -E archtest.c 2>/dev/null | grep -v '^\#' | grep '"' | cut -f 2 -d'"'))
+override ARCH := $(strip $(call debug_shell,$(CC) $(CPPFLAGS) -E archtest.c 2>/dev/null | grep -v '^\#' | tail -n 1 | grep '"' | cut -f 2 -d'"'))
 override ENDIAN := $(strip $(call debug_shell,$(CC) $(CPPFLAGS) -E endiantest.c 2>/dev/null | grep -v '^\#'))
 
 # Disable the internal programmer on unsupported architectures (everything but x86 and mipsel)
@@ -476,7 +476,7 @@ endif
 # Disable all drivers needing raw access (memory, PCI, port I/O) on
 # architectures with unknown raw access properties.
 # Right now those architectures are alpha hppa m68k sh s390
-ifneq ($(ARCH),$(filter $(ARCH),x86 mips ppc arm sparc arc))
+ifneq ($(ARCH),$(filter $(ARCH),x86 mips ppc arm sparc arc loongarch))
 ifeq ($(CONFIG_RAYER_SPI), yes)
 UNSUPPORTED_FEATURES += CONFIG_RAYER_SPI=yes
 else
@@ -1037,15 +1037,15 @@ LIBS += -lni845x
 PROGRAMMER_OBJS += ni845x_spi.o
 endif
 
-ifneq ($(NEED_SERIAL), )
-LIB_OBJS += serial.o custom_baud.o
-endif
-
 ifeq ($(CONFIG_LOONGSON3_SPI), yes)
 FEATURE_CFLAGS += -D'CONFIG_LOONGSON3_SPI=1'
 PROGRAMMER_OBJS += loongson3_spi.o
 endif
 
+ifneq ($(NEED_SERIAL), )
+LIB_OBJS += serial.o custom_baud.o
+endif
+
 ifneq ($(NEED_POSIX_SOCKETS), )
 ifeq ($(TARGET_OS), SunOS)
 LIBS += -lsocket -lnsl
diff --git a/flashrom.c b/flashrom.c
index e540027..115a394 100644
--- a/flashrom.c
+++ b/flashrom.c
@@ -473,6 +473,18 @@ const struct programmer_entry programmer_table[] = {
 	},
 #endif
 
+#if CONFIG_LOONGSON3_SPI == 1
+	{
+		.name			= "loongson3_spi",
+		.type			= OTHER,
+		.devs.note		= "Loongson-3 SPI BIOS Flash\n",
+		.init			= loongson3_spi_init,
+		.map_flash_region	= fallback_map,
+		.unmap_flash_region	= fallback_unmap,
+		.delay			= internal_delay,
+	},
+#endif
+
 	{0}, /* This entry corresponds to PROGRAMMER_INVALID. */
 };
 
diff --git a/hwaccess.h b/hwaccess.h
index 5602c15..e3104e8 100644
--- a/hwaccess.h
+++ b/hwaccess.h
@@ -279,6 +279,10 @@ int libpayload_wrmsr(int addr, msr_t msr);
 
 /* PCI port I/O is not yet implemented on PowerPC. */
 
+#elif IS_LOONGARCH
+
+/* PCI port I/O is not yet implemented on LoongArch. */
+
 #elif IS_MIPS
 
 /* PCI port I/O is not yet implemented on MIPS. */
diff --git a/loongson3_spi.c b/loongson3_spi.c
index 54fc814..f29fc4a 100644
--- a/loongson3_spi.c
+++ b/loongson3_spi.c
@@ -59,11 +59,18 @@
 static uint8_t *spictrl_base;
 
 static int loongson3_spi_shutdown(void *data);
-static int loongson3_spi_send_command(const struct flashctx *flash, unsigned int writecnt,
+static int loongson3_spi_send_command(struct flashctx *flash, unsigned int writecnt,
 				  unsigned int readcnt,
-				   const uint8_t *writearr,
+				   const unsigned char *writearr,
 				   uint8_t *readarr);
 
+
+//loongson3_spi.c:70:27: error: initialization of '
+//int (*)(struct flashrom_flashctx *, unsigned int,  unsigned int,  const unsigned char *, unsigned char *)' from incompatible pointer type '
+//int (*)(const struct flashrom_flashctx *, unsigned int,  unsigned int,  const uint8_t *, uint8_t *)' {aka '
+//int (*)(const struct flashrom_flashctx *, unsigned int,  unsigned int,  const unsigned char *, unsigned char *)'} [-Werror=incompatible-pointer-types]
+//
+
 static const struct spi_master spi_master_loongson3 = {
 	.max_data_read	= MAX_DATA_READ_UNLIMITED,
 	.max_data_write	= MAX_DATA_WRITE_UNLIMITED,
@@ -190,9 +197,9 @@ static int loongson3_spi_shutdown(void *data)
 	return 0;
 }
 
-static int loongson3_spi_send_command(const struct flashctx *flash, unsigned int writecnt,
+static int loongson3_spi_send_command(struct flashctx *flash, unsigned int writecnt,
 				  unsigned int readcnt,
-				   const uint8_t *writearr,
+				   const unsigned char *writearr,
 				   uint8_t *readarr)
 {
 	unsigned int i;
diff --git a/meson.build b/meson.build
index 375089c..8e58d36 100644
--- a/meson.build
+++ b/meson.build
@@ -46,6 +46,7 @@ config_internal = get_option('config_internal')
 config_it8212 = get_option('config_it8212')
 config_linux_mtd = get_option('config_linux_mtd')
 config_linux_spi = get_option('config_linux_spi')
+config_loongson3_spi = get_option('config_loongson3_spi')
 config_mstarddc_spi = get_option('config_mstarddc_spi')
 config_nic3com = get_option('config_nic3com')
 config_nicintel_eeprom = get_option('config_nicintel_eeprom')
@@ -205,6 +206,11 @@ if config_linux_spi
   srcs += 'linux_spi.c'
   cargs += '-DCONFIG_LINUX_SPI=1'
 endif
+if config_loongson3_spi
+  srcs += 'loongson3_spi.c'
+  cargs += '-DCONFIG_LOONGSON3_SPI=1'
+  need_raw_access = true
+endif
 if config_mstarddc_spi
   srcs += 'mstarddc_spi.c'
   cargs += '-DCONFIG_MSTARDDC_SPI=1'
diff --git a/meson_options.txt b/meson_options.txt
index ea87311..d71ac5f 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -18,6 +18,7 @@ option('config_internal_dmi', type : 'boolean', value : true, description : 'Use
 option('config_it8212', type : 'boolean', value : true, description : 'ITE IT8212F PATA')
 option('config_linux_mtd', type : 'boolean', value : true, description : 'Linux MTD interfaces')
 option('config_linux_spi', type : 'boolean', value : true, description : 'Linux spidev interfaces')
+option('config_loongson3_spi', type : 'boolean', value : true, description : 'Loongson3 interfaces')
 option('config_mstarddc_spi', type : 'boolean', value : false, description : 'MSTAR DDC support')
 option('config_nic3com', type : 'boolean', value : true, description : '3Com NICs')
 option('config_nicintel_eeprom', type : 'boolean', value : true, description : 'EEPROM on Intel NICs')
diff --git a/platform.h b/platform.h
index 751957c..9b2f91f 100644
--- a/platform.h
+++ b/platform.h
@@ -62,6 +62,9 @@
 #elif defined (__hppa__) || defined (__hppa)
 	#define __FLASHROM_ARCH__ "hppa"
 	#define IS_HPPA 1
+#elif defined (__loongarch__)
+	#define __FLASHROM_ARCH__ "loongarch"
+	#define IS_LOONGARCH 1
 #elif defined (__m68k__)
 	#define __FLASHROM_ARCH__ "m68k"
 	#define IS_M68K 1
@@ -79,7 +82,7 @@
 	#define IS_ARC 1
 #endif
 
-#if !(IS_X86 || IS_MIPS || IS_PPC || IS_ARM || IS_SPARC || IS_ALPHA || IS_HPPA || IS_M68K || IS_RISCV || IS_SH || IS_S390 || IS_ARC)
+#if !(IS_X86 || IS_MIPS || IS_PPC || IS_ARM || IS_SPARC || IS_ALPHA || IS_HPPA || IS_LOONGARCH || IS_M68K || IS_RISCV || IS_SH || IS_S390 || IS_ARC)
 #error Unknown architecture
 #endif
 
diff --git a/programmer.h b/programmer.h
index ccdf44c..2d8f631 100644
--- a/programmer.h
+++ b/programmer.h
@@ -126,6 +126,9 @@ enum programmer {
 #endif
 #if CONFIG_STLINKV3_SPI == 1
 	PROGRAMMER_STLINKV3_SPI,
+#endif
+#if CONFIG_LOONGSON3_SPI == 1
+	PROGRAMMER_LOONGSON3_SPI,
 #endif
 	PROGRAMMER_INVALID /* This must always be the last entry. */
 };
-- 
2.35.1

