--- a/src/tests/tag/tag_perf.cpp
+++ b/src/tests/tag/tag_perf.cpp
@@ -20,6 +20,7 @@ using namespace gloox;
 #include <cstdlib>
 #include <string>
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 #include <sys/time.h>
 
--- a/src/tests/zlib/zlib_perf.cpp
+++ b/src/tests/zlib/zlib_perf.cpp
@@ -24,6 +24,7 @@ using namespace gloox;
 #include <string>
 #include <sys/time.h>
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 #ifdef HAVE_ZLIB
 
Index: gloox-1.0.24/src/examples/adhoc_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/adhoc_example.cpp
+++ gloox-1.0.24/src/examples/adhoc_example.cpp
@@ -25,6 +25,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 
 class AdhocTest : public ConnectionListener, AdhocCommandProvider, LogHandler
Index: gloox-1.0.24/src/examples/annotations_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/annotations_example.cpp
+++ gloox-1.0.24/src/examples/annotations_example.cpp
@@ -22,6 +22,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class AnnotationsTest : public AnnotationsHandler, ConnectionListener
 {
Index: gloox-1.0.24/src/examples/bookmarkstorage_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/bookmarkstorage_example.cpp
+++ gloox-1.0.24/src/examples/bookmarkstorage_example.cpp
@@ -22,6 +22,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class BookmarkStorageTest : public BookmarkHandler, ConnectionListener
 {
Index: gloox-1.0.24/src/examples/component_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/component_example.cpp
+++ gloox-1.0.24/src/examples/component_example.cpp
@@ -22,6 +22,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class ComponentTest : public DiscoHandler, ConnectionListener, LogHandler
 {
Index: gloox-1.0.24/src/examples/disco_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/disco_example.cpp
+++ gloox-1.0.24/src/examples/disco_example.cpp
@@ -24,6 +24,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class DiscoTest : public DiscoHandler, ConnectionListener, LogHandler
 {
Index: gloox-1.0.24/src/examples/e2ee_client.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/e2ee_client.cpp
+++ gloox-1.0.24/src/examples/e2ee_client.cpp
@@ -29,6 +29,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 #ifdef WIN32
 #include <windows.h>
Index: gloox-1.0.24/src/examples/e2ee_server.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/e2ee_server.cpp
+++ gloox-1.0.24/src/examples/e2ee_server.cpp
@@ -29,6 +29,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 #ifdef WIN32
 #include <windows.h>
Index: gloox-1.0.24/src/examples/privacylist_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/privacylist_example.cpp
+++ gloox-1.0.24/src/examples/privacylist_example.cpp
@@ -22,6 +22,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class PLTest : public PrivacyListHandler, ConnectionListener
 {
Index: gloox-1.0.24/src/examples/privatexml_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/privatexml_example.cpp
+++ gloox-1.0.24/src/examples/privatexml_example.cpp
@@ -22,6 +22,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class PrivateXMLTest : public PrivateXMLHandler, ConnectionListener
 {
Index: gloox-1.0.24/src/examples/register_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/register_example.cpp
+++ gloox-1.0.24/src/examples/register_example.cpp
@@ -22,6 +22,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class RegTest : public RegistrationHandler, ConnectionListener, LogHandler
 {
Index: gloox-1.0.24/src/examples/reset_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/reset_example.cpp
+++ gloox-1.0.24/src/examples/reset_example.cpp
@@ -23,6 +23,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class RosterTest : public ConnectionListener, LogHandler
 {
Index: gloox-1.0.24/src/examples/roster_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/roster_example.cpp
+++ gloox-1.0.24/src/examples/roster_example.cpp
@@ -27,6 +27,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class RosterTest : public RosterListener, ConnectionListener, LogHandler, MessageHandler
 {
Index: gloox-1.0.24/src/examples/vcard_example.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/vcard_example.cpp
+++ gloox-1.0.24/src/examples/vcard_example.cpp
@@ -26,6 +26,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 class VCardTest : public ConnectionListener, LogHandler, VCardHandler
 {
Index: gloox-1.0.24/src/examples/ft_recv.cpp
===================================================================
--- gloox-1.0.24.orig/src/examples/ft_recv.cpp
+++ gloox-1.0.24/src/examples/ft_recv.cpp
@@ -27,6 +27,7 @@ using namespace gloox;
 #include <string>
 
 #include <cstdio> // [s]print[f]
+#include <ctime>
 
 #if defined( WIN32 ) || defined( _WIN32 )
 # include <windows.h>
