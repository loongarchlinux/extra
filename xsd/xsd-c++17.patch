Index: xsd-4.0.0+dep/libcutl/cutl/shared-ptr/base.cxx
===================================================================
--- xsd-4.0.0+dep.orig/libcutl/cutl/shared-ptr/base.cxx
+++ xsd-4.0.0+dep/libcutl/cutl/shared-ptr/base.cxx
@@ -25,7 +25,7 @@ namespace cutl
 //
 //
 void*
-operator new (size_t n, cutl::share s) throw (std::bad_alloc)
+operator new (size_t n, cutl::share s) noexcept(false)
 {
   if (s == shared)
   {
Index: xsd-4.0.0+dep/libcutl/cutl/shared-ptr/base.hxx
===================================================================
--- xsd-4.0.0+dep.orig/libcutl/cutl/shared-ptr/base.hxx
+++ xsd-4.0.0+dep/libcutl/cutl/shared-ptr/base.hxx
@@ -31,7 +31,7 @@ extern LIBCUTL_EXPORT cutl::share shared
 extern LIBCUTL_EXPORT cutl::share exclusive;
 
 LIBCUTL_EXPORT void*
-operator new (std::size_t, cutl::share) throw (std::bad_alloc);
+operator new (std::size_t, cutl::share) noexcept(false);
 
 LIBCUTL_EXPORT void
 operator delete (void*, cutl::share) throw ();
@@ -61,7 +61,7 @@ namespace cutl
     _ref_count () const;
 
     void*
-    operator new (std::size_t, share) throw (std::bad_alloc);
+    operator new (std::size_t, share) noexcept(false);
 
     void
     operator delete (void*, share) throw ();
Index: xsd-4.0.0+dep/libcutl/cutl/shared-ptr/base.ixx
===================================================================
--- xsd-4.0.0+dep.orig/libcutl/cutl/shared-ptr/base.ixx
+++ xsd-4.0.0+dep/libcutl/cutl/shared-ptr/base.ixx
@@ -59,7 +59,7 @@ namespace cutl
   }
 
   inline void* shared_base::
-  operator new (std::size_t n, share) throw (std::bad_alloc)
+  operator new (std::size_t n, share) noexcept(false)
   {
     return ::operator new (n);
   }
