commit 544fda0a238c786e565e09dd7ff9e9917c29aaf6
Author: Tom Hughes <tom@compton.nu>
Date:   Thu Jan 18 20:19:20 2024 +0000

    Fix gcc 14 build issues

diff --git a/include/mapnik/geometry/boost_spirit_karma_adapter.hpp b/include/mapnik/geometry/boost_spirit_karma_adapter.hpp
index a146ef1d1..318613b15 100644
--- a/include/mapnik/geometry/boost_spirit_karma_adapter.hpp
+++ b/include/mapnik/geometry/boost_spirit_karma_adapter.hpp
@@ -26,6 +26,8 @@
 
 #include <mapnik/geometry.hpp>
 
+#include <cstdint>
+
 namespace boost { using mapbox::util::get; }
 
 #include <boost/spirit/home/karma/domain.hpp>
diff --git a/include/mapnik/geometry_fusion_adapted.hpp b/include/mapnik/geometry_fusion_adapted.hpp
index 66869891a..eafc9dee2 100644
--- a/include/mapnik/geometry_fusion_adapted.hpp
+++ b/include/mapnik/geometry_fusion_adapted.hpp
@@ -27,6 +27,8 @@
 #include <mapnik/geometry.hpp>
 #include <boost/fusion/include/adapt_struct.hpp>
 
+#include <cstdint>
+
 BOOST_FUSION_ADAPT_STRUCT(
     mapnik::geometry::point<double>,
     (double, x)
diff --git a/include/mapnik/grid/grid_view.hpp b/include/mapnik/grid/grid_view.hpp
index b26001774..106fc708f 100644
--- a/include/mapnik/grid/grid_view.hpp
+++ b/include/mapnik/grid/grid_view.hpp
@@ -92,22 +92,6 @@ public:
           features_(rhs.features_)
     {}
 
-    hit_grid_view<T> & operator=(hit_grid_view<T> const& rhs)
-    {
-        if (&rhs==this) return *this;
-        x_ = rhs.x_;
-        y_ = rhs.y_;
-        width_ = rhs.width_;
-        height_ = rhs.height_;
-        data_ = rhs.data_;
-        key_ = rhs.key_;
-        id_name_ = rhs.id_name_;
-        names_ = rhs.names_;
-        f_keys_ = rhs.f_keys_;
-        features_ = rhs.features_;
-        return *this;
-    }
-
     inline unsigned x() const
     {
         return x_;
diff --git a/include/mapnik/util/singleton.hpp b/include/mapnik/util/singleton.hpp
index 0736e0961..691d19283 100644
--- a/include/mapnik/util/singleton.hpp
+++ b/include/mapnik/util/singleton.hpp
@@ -40,7 +40,7 @@ namespace mapnik
 {
 
 template <typename T>
-class CreateUsingNew
+class MAPNIK_DECL CreateUsingNew
 {
 public:
     static T* create()
@@ -54,7 +54,7 @@ public:
 };
 
 template <typename T>
-class CreateStatic
+class MAPNIK_DECL CreateStatic
 {
 private:
     using storage_type = typename std::aligned_storage<sizeof(T), alignof(T)>::type;
