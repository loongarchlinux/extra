# Maintainer: George Rawlinson <grawlinson@archlinux.org>

pkgname=bat-extras
pkgver=2024.07.10
pkgrel=1
pkgdesc='Bash scripts that integrate bat with various command line tools'
arch=('any')
url='https://github.com/eth-p/bat-extras'
license=('MIT')
depends=(
  'bat'
  'bash'
  'git'
  'ripgrep'
  'man'
)
makedepends=('shfmt')
checkdepends=('fish')
optdepends=(
  'ncurses: optional for batdiff script'
  'git-delta: optional for batdiff script'
  'fzf: optional for batman script'
  'exa: optional for batpipe script'
  'entr: optional for batwatch script'
  'prettier: various code formatting for prettybat script'
  'shfmt: bash formatting for prettybat script'
  'rustfmt: Rust formatting for prettybat script'
  'clang: C / C++ / Objective-C formatting for prettybat script'
  'python-black: Python formatting for prettybat script'
)
source=(
  "git+https://github.com/eth-p/bat-extras.git#tag=v$pkgver"
  'github.com-eth-p-best::git+https://github.com/eth-p/best.git'
  'github.com-eth-p-best-tests::git+https://github.com/eth-p/best-tests.git'
)
sha512sums=('f2e94dc630baa34777ea24279206e3f250ce99feb2c4e1d1f7f56e2e2c25fc39dc12b17f6c065a105eb660e801d3c4f4aa585aaea9e70aa5247d7bb9d5b33e4b'
            'SKIP'
            'SKIP')
b2sums=('5885f8e596f1efaeeb194393153e56395cd1bc80e5ead676816b41f071003dfa0c1d9e664a7a5f6a07debe2171f2f9dfd194a31b8aa292336ae472f5780a626d'
        'SKIP'
        'SKIP')

prepare(){
  cd "$pkgname"

  # setup submodules
  git submodule init
  git config submodule.best.url "$srcdir/github.com-eth-p-best"
  git -c protocol.file.allow=always submodule update

  pushd .test-framework
  git submodule init
  git config submodule.best-tests.url "$srcdir/github.com-eth-p-best-tests"
  git -c protocol.file.allow=always submodule update
  popd

  # fix incorrect version string using commit date
  # https://github.com/eth-p/bat-extras/issues/68
  git show --no-patch --format=%cd --date=format:%Y.%m.%d > version.txt
}

check() {
  cd "$pkgname"

  ./test.sh --verbose --strict --snapshot:show
}

package() {
  cd "$pkgname"

  # scripts
  ./build.sh \
    --prefix="$pkgdir/usr" \
    --install

  # documentation
  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgname" \
    CONTRIBUTING.md README.md doc/*

  # man pages
  install -vDm644 -t "$pkgdir/usr/share/man/man1" man/*

  # license
  install -vDm644 -t "$pkgdir/usr/share/licenses/$pkgname" LICENSE.md
}
