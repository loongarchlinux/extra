diff --git a/xcb/dforeignplatformwindow_x11.cpp b/xcb/dforeignplatformwindow_x11.cpp
index 20e9ee3..a0d41db 100644
--- a/xcb/dforeignplatformwindow_x11.cpp
+++ b/xcb/dforeignplatformwindow_x11.cpp
@@ -131,7 +131,7 @@ void DForeignPlatformWindow::handleConfigureNotifyEvent(const xcb_configure_noti
 {
     bool fromSendEvent = (event->response_type & 0x80);
     QPoint pos(event->x, event->y);
-    if (!parent() && !fromSendEvent) {
+    if (!QPlatformWindow::parent() && !fromSendEvent) {
         // Do not trust the position, query it instead.
         xcb_translate_coordinates_cookie_t cookie = xcb_translate_coordinates(xcb_connection(), xcb_window(),
                                                                               xcbScreen()->root(), 0, 0);
@@ -144,7 +144,7 @@ void DForeignPlatformWindow::handleConfigureNotifyEvent(const xcb_configure_noti
     }
 
     QRect actualGeometry = QRect(pos, QSize(event->width, event->height));
-    QPlatformScreen *newScreen = parent() ? parent()->screen() : screenForGeometry(actualGeometry);
+    QPlatformScreen *newScreen = QPlatformWindow::parent() ? QPlatformWindow::parent()->screen() : screenForGeometry(actualGeometry);
     if (!newScreen)
         return;
 
diff --git a/xcb/windoweventhook.cpp b/xcb/windoweventhook.cpp
index f1bf817..fba3829 100644
--- a/xcb/windoweventhook.cpp
+++ b/xcb/windoweventhook.cpp
@@ -338,7 +338,7 @@ void WindowEventHook::handleFocusInEvent(QXcbWindow *window, const xcb_focus_in_
             return;
     }
 
-    VtableHook::callOriginalFun(window, &QXcbWindow::handleFocusInEvent, event);
+    window->QXcbWindow::handleFocusInEvent(event);
 }
 
 void WindowEventHook::handleFocusOutEvent(QXcbWindow *window, const xcb_focus_out_event_t *event)
@@ -353,7 +353,7 @@ void WindowEventHook::handleFocusOutEvent(QXcbWindow *window, const xcb_focus_ou
     if (event->detail == XCB_NOTIFY_DETAIL_POINTER)
         return;
 
-    VtableHook::callOriginalFun(window, &QXcbWindow::handleFocusOutEvent, event);
+    window->QXcbWindow::handleFocusOutEvent(event);
 }
 
 void WindowEventHook::handlePropertyNotifyEvent(QXcbWindowEventListener *el, const xcb_property_notify_event_t *event)
