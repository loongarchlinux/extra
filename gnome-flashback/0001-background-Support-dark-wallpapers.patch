From 9fb57870a74e60a6e833dd2663ddff8de63f2f71 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 23 Jan 2024 13:20:54 +0100
Subject: [PATCH] background: Support dark wallpapers

Use the 'picture-uri-dark' setting introduced in GNOME 42 to read the filename of the wallpaper when the 'color-scheme' is 'prefer-dark'. This follows the logic implemented in gnome-shell. Use the same background settings for the screensaver wallpaper to make it consistent.
---
 gnome-flashback/libcommon/gf-bg.c             | 21 ++++++++++----
 gnome-flashback/libcommon/gf-bg.h             |  3 +-
 gnome-flashback/libdesktop/gf-background.c    | 21 ++++++++++++--
 .../libroot-background/gf-root-background.c   | 28 +++++++++++++++++--
 gnome-flashback/libscreensaver/gf-manager.c   | 23 +++++++++++++--
 5 files changed, 83 insertions(+), 13 deletions(-)

diff --git a/gnome-flashback/libcommon/gf-bg.c b/gnome-flashback/libcommon/gf-bg.c
index 27e1dca..7bcae91 100644
--- a/gnome-flashback/libcommon/gf-bg.c
+++ b/gnome-flashback/libcommon/gf-bg.c
@@ -49,6 +49,8 @@
 #define BG_KEY_PICTURE_PLACEMENT  "picture-options"
 #define BG_KEY_PICTURE_OPACITY    "picture-opacity"
 #define BG_KEY_PICTURE_URI        "picture-uri"
+#define BG_KEY_PICTURE_URI_DARK   "picture-uri-dark"
+#define IFACE_KEY_COLOR_SCHEME    "color-scheme"
 
 /* We keep the large pixbufs around if the next update
    in the slideshow is less than 60 seconds away */
@@ -1788,7 +1790,8 @@ gf_bg_new (void)
 
 void
 gf_bg_load_from_preferences (GfBG      *self,
-                             GSettings *settings)
+                             GSettings *settings,
+                             GSettings *interface_settings)
 {
   char *tmp;
   char *filename;
@@ -1801,10 +1804,18 @@ gf_bg_load_from_preferences (GfBG      *self,
   g_return_if_fail (G_IS_SETTINGS (settings));
 
   /* Filename */
-  filename = g_settings_get_mapped (settings,
-                                    BG_KEY_PICTURE_URI,
-                                    bg_gsettings_mapping,
-                                    NULL);
+  tmp = g_settings_get_string (interface_settings, IFACE_KEY_COLOR_SCHEME);
+  if (strcmp (tmp, "prefer-dark") == 0)
+    filename = g_settings_get_mapped (settings,
+                                      BG_KEY_PICTURE_URI_DARK,
+                                      bg_gsettings_mapping,
+                                      NULL);
+  else
+    filename = g_settings_get_mapped (settings,
+                                      BG_KEY_PICTURE_URI,
+                                      bg_gsettings_mapping,
+                                      NULL);
+  g_free (tmp);
 
   /* Colors */
   tmp = g_settings_get_string (settings, BG_KEY_PRIMARY_COLOR);
diff --git a/gnome-flashback/libcommon/gf-bg.h b/gnome-flashback/libcommon/gf-bg.h
index 48d0648..98faaae 100644
--- a/gnome-flashback/libcommon/gf-bg.h
+++ b/gnome-flashback/libcommon/gf-bg.h
@@ -34,7 +34,8 @@ G_DECLARE_FINAL_TYPE (GfBG, gf_bg, GF, BG, GObject)
 GfBG            *gf_bg_new                            (void);
 
 void             gf_bg_load_from_preferences          (GfBG                      *self,
-                                                       GSettings                 *settings);
+                                                       GSettings                 *settings,
+                                                       GSettings                 *interface_settings);
 
 void             gf_bg_save_to_preferences            (GfBG                      *self,
                                                        GSettings                 *settings);
diff --git a/gnome-flashback/libdesktop/gf-background.c b/gnome-flashback/libdesktop/gf-background.c
index 25a42e6..fe28f26 100644
--- a/gnome-flashback/libdesktop/gf-background.c
+++ b/gnome-flashback/libdesktop/gf-background.c
@@ -42,6 +42,7 @@ struct _GfBackground
 
   GSettings       *settings1;
   GSettings       *settings2;
+  GSettings       *interface_settings;
 
   GfBG            *bg;
 
@@ -266,7 +267,17 @@ change_event_cb (GSettings    *settings,
                  gint          n_keys,
                  GfBackground *self)
 {
-  gf_bg_load_from_preferences (self->bg, self->settings1);
+  gf_bg_load_from_preferences (self->bg, self->settings1, self->interface_settings);
+
+  return TRUE;
+}
+
+static gboolean
+color_scheme_changed_cb (GSettings    *interface_settings,
+                         const char   *key,
+                         GfBackground *self)
+{
+  gf_bg_load_from_preferences (self->bg, self->settings1, self->interface_settings);
 
   return TRUE;
 }
@@ -299,6 +310,7 @@ gf_background_constructed (GObject *object)
 
   self->settings1 = g_settings_new ("org.gnome.desktop.background");
   self->settings2 = g_settings_new ("org.gnome.gnome-flashback.desktop.background");
+  self->interface_settings = g_settings_new ("org.gnome.desktop.interface");
 
   self->bg = gf_bg_new ();
 
@@ -314,6 +326,10 @@ gf_background_constructed (GObject *object)
                     G_CALLBACK (change_event_cb),
                     self);
 
+  g_signal_connect (self->interface_settings, "changed::color-scheme",
+                    G_CALLBACK (color_scheme_changed_cb),
+                    self);
+
   g_signal_connect (self->bg, "changed",
                     G_CALLBACK (changed_cb),
                     self);
@@ -322,7 +338,7 @@ gf_background_constructed (GObject *object)
                     G_CALLBACK (transitioned_cb),
                     self);
 
-  gf_bg_load_from_preferences (self->bg, self->settings1);
+  gf_bg_load_from_preferences (self->bg, self->settings1, self->interface_settings);
 }
 
 static void
@@ -334,6 +350,7 @@ gf_background_dispose (GObject *object)
 
   g_clear_object (&self->settings1);
   g_clear_object (&self->settings2);
+  g_clear_object (&self->interface_settings);
   g_clear_object (&self->bg);
 
   G_OBJECT_CLASS (gf_background_parent_class)->dispose (object);
diff --git a/gnome-flashback/libroot-background/gf-root-background.c b/gnome-flashback/libroot-background/gf-root-background.c
index a2a0add..7bf4b52 100644
--- a/gnome-flashback/libroot-background/gf-root-background.c
+++ b/gnome-flashback/libroot-background/gf-root-background.c
@@ -29,12 +29,14 @@ struct _GfRootBackground
   gulong     monitors_changed_id;
   gulong     size_changed_id;
   gulong     change_event_id;
+  gulong     color_scheme_changed_id;
 
   guint      change_idle_id;
 
   GfBG      *bg;
 
   GSettings *settings;
+  GSettings *interface_settings;
 };
 
 G_DEFINE_TYPE (GfRootBackground, gf_root_background, G_TYPE_OBJECT)
@@ -95,7 +97,17 @@ change_event_cb (GSettings        *settings,
                  gint              n_keys,
                  GfRootBackground *self)
 {
-  gf_bg_load_from_preferences (self->bg, self->settings);
+  gf_bg_load_from_preferences (self->bg, self->settings, self->interface_settings);
+
+  return TRUE;
+}
+
+static gboolean
+color_scheme_changed_cb (GSettings        *interface_settings,
+                         const char       *key,
+                         GfRootBackground *self)
+{
+  gf_bg_load_from_preferences (self->bg, self->settings, self->interface_settings);
 
   return TRUE;
 }
@@ -177,6 +189,12 @@ gf_root_background_dispose (GObject *object)
       self->change_event_id = 0;
     }
 
+  if (self->color_scheme_changed_id != 0)
+    {
+      g_signal_handler_disconnect (self->settings, self->change_event_id);
+      self->color_scheme_changed_id = 0;
+    }
+
   if (self->change_idle_id != 0)
     {
       g_source_remove (self->change_idle_id);
@@ -185,6 +203,7 @@ gf_root_background_dispose (GObject *object)
 
   g_clear_object (&self->bg);
   g_clear_object (&self->settings);
+  g_clear_object (&self->interface_settings);
 
   G_OBJECT_CLASS (gf_root_background_parent_class)->dispose (object);
 }
@@ -223,12 +242,17 @@ gf_root_background_init (GfRootBackground *self)
                     G_CALLBACK (transitioned_cb), self);
 
   self->settings = g_settings_new ("org.gnome.desktop.background");
+  self->interface_settings = g_settings_new ("org.gnome.desktop.interface");
 
   self->change_event_id =
     g_signal_connect (self->settings, "change-event",
                       G_CALLBACK (change_event_cb), self);
 
-  gf_bg_load_from_preferences (self->bg, self->settings);
+  self->color_scheme_changed_id =
+    g_signal_connect (self->interface_settings, "changed::color-scheme",
+                      G_CALLBACK (color_scheme_changed_cb), self);
+
+  gf_bg_load_from_preferences (self->bg, self->settings, self->interface_settings);
 }
 
 GfRootBackground *
diff --git a/gnome-flashback/libscreensaver/gf-manager.c b/gnome-flashback/libscreensaver/gf-manager.c
index c8604c6..151742a 100644
--- a/gnome-flashback/libscreensaver/gf-manager.c
+++ b/gnome-flashback/libscreensaver/gf-manager.c
@@ -31,6 +31,7 @@ struct _GfManager
   GObject           parent;
 
   GSettings        *settings;
+  GSettings        *interface_settings;
   GfBG             *bg;
 
   GfGrab           *grab;
@@ -250,7 +251,17 @@ settings_change_event_cb (GSettings *settings,
                           gint       n_keys,
                           GfManager *self)
 {
-  gf_bg_load_from_preferences (self->bg, self->settings);
+  gf_bg_load_from_preferences (self->bg, self->settings, self->interface_settings);
+
+  return FALSE;
+}
+
+static gboolean
+color_scheme_changed_cb (GSettings  *interface_settings,
+                         const char *key,
+                         GfManager  *self)
+{
+  gf_bg_load_from_preferences (self->bg, self->settings, self->interface_settings);
 
   return FALSE;
 }
@@ -575,6 +586,7 @@ gf_manager_dispose (GObject *object)
   self = GF_MANAGER (object);
 
   g_clear_object (&self->settings);
+  g_clear_object (&self->interface_settings);
   g_clear_object (&self->bg);
 
   G_OBJECT_CLASS (gf_manager_parent_class)->dispose (object);
@@ -679,7 +691,8 @@ gf_manager_class_init (GfManagerClass *self_class)
 static void
 gf_manager_init (GfManager *self)
 {
-  self->settings = g_settings_new ("org.gnome.desktop.screensaver");
+  self->settings = g_settings_new ("org.gnome.desktop.background");
+  self->interface_settings = g_settings_new ("org.gnome.desktop.interface");
   self->bg = gf_bg_new ();
 
   g_signal_connect (self->bg, "changed",
@@ -690,7 +703,11 @@ gf_manager_init (GfManager *self)
                     G_CALLBACK (settings_change_event_cb),
                     self);
 
-  gf_bg_load_from_preferences (self->bg, self->settings);
+  g_signal_connect (self->interface_settings, "changed::color-scheme",
+                    G_CALLBACK (color_scheme_changed_cb),
+                    self);
+
+  gf_bg_load_from_preferences (self->bg, self->settings, self->interface_settings);
 }
 
 GfManager *
-- 
2.44.0

