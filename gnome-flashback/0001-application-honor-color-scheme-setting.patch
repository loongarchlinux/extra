From ba2d15d56325f50caa140c9c54f40fc107a0c35e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Wed, 24 Jan 2024 16:56:46 +0100
Subject: [PATCH] application: honor 'color-scheme' setting

The color-scheme setting is the new system-wide dark preference introduced in GNOME 42. Set the dark theme based on this setting.
---
 configure.ac                     |  2 +-
 daemons/polkit/gf-polkit-main.c  | 34 ++++++++++++++++++++++
 gnome-flashback/gf-application.c | 50 ++++++++++++++++++++++++++++----
 3 files changed, 79 insertions(+), 7 deletions(-)

diff --git a/configure.ac b/configure.ac
index 844d6f0..6a9ccca 100644
--- a/configure.ac
+++ b/configure.ac
@@ -94,7 +94,7 @@ LIBGNOME_DESKTOP_REQUIRED=43
 LIBGNOME_PANEL_REQUIRED=3.35.2
 CANBERRA_REQUIRED=0.13
 GLIB_REQUIRED=2.67.3
-GSETTINGS_DESKTOP_SCHEMAS_REQUIRED=3.31.0
+GSETTINGS_DESKTOP_SCHEMAS_REQUIRED=42.0
 POLKIT_AGENT_REQUIRED=0.97
 POLKIT_GOBJECT_REQUIRED=0.97
 IBUS_REQUIRED=1.5.2
diff --git a/daemons/polkit/gf-polkit-main.c b/daemons/polkit/gf-polkit-main.c
index 51fb915..29543fe 100644
--- a/daemons/polkit/gf-polkit-main.c
+++ b/daemons/polkit/gf-polkit-main.c
@@ -180,12 +180,38 @@ session_manager_ready_cb (GObject      *source_object,
   g_object_unref (session_manager);
 }
 
+static void
+color_scheme_changed (GSettings  *interface_settings,
+                      const char *key,
+                      void       *user_data)
+{
+  char *color_scheme;
+
+  color_scheme = g_settings_get_string (interface_settings, "color-scheme");
+
+  if (g_strcmp0 (color_scheme, "prefer-dark") == 0)
+    {
+      g_object_set (gtk_settings_get_default (),
+                    "gtk-application-prefer-dark-theme",
+                    TRUE,
+                    NULL);
+    }
+  else
+    {
+      gtk_settings_reset_property (gtk_settings_get_default (),
+                                   "gtk-application-prefer-dark-theme");
+    }
+
+  g_free (color_scheme);
+}
+
 int
 main (int argc,
       char *argv[])
 {
   const char *autostart_id;
   FlashbackPolkit *polkit;
+  GSettings *interface_settings;
 
   autostart_id = g_getenv ("DESKTOP_AUTOSTART_ID");
   startup_id = g_strdup (autostart_id != NULL ? autostart_id : "");
@@ -193,6 +219,13 @@ main (int argc,
 
   gtk_init (&argc, &argv);
 
+  interface_settings = g_settings_new ("org.gnome.desktop.interface");
+
+  g_signal_connect (interface_settings, "changed::color-scheme",
+                    G_CALLBACK (color_scheme_changed), NULL);
+
+  color_scheme_changed (interface_settings, NULL, NULL);
+
   loop = g_main_loop_new (NULL, FALSE);
   polkit = flashback_polkit_new ();
 
@@ -212,6 +245,7 @@ main (int argc,
   g_main_loop_unref (loop);
 
   g_object_unref (polkit);
+  g_clear_object (&interface_settings);
   g_clear_object (&client_private);
   g_free (startup_id);
 
diff --git a/gnome-flashback/gf-application.c b/gnome-flashback/gf-application.c
index 36d57ae..be1fb17 100644
--- a/gnome-flashback/gf-application.c
+++ b/gnome-flashback/gf-application.c
@@ -50,6 +50,7 @@ struct _GfApplication
   gint                     bus_name;
 
   GSettings               *settings;
+  GSettings               *interface_settings;
 
   GtkStyleProvider        *provider;
 
@@ -134,12 +135,10 @@ is_theme_supported (const char        *theme_name,
 }
 
 static void
-theme_changed (GtkSettings *settings,
-               GParamSpec  *pspec,
-               gpointer     user_data)
+update_theme (GfApplication *application)
 {
-  GfApplication *application;
   GdkScreen *screen;
+  GtkSettings *settings;
   gchar *theme_name;
   gboolean prefer_dark;
   GfSupportedTheme *theme;
@@ -147,8 +146,8 @@ theme_changed (GtkSettings *settings,
   guint priority;
   GtkCssProvider *css;
 
-  application = GF_APPLICATION (user_data);
   screen = gdk_screen_get_default ();
+  settings = gtk_settings_get_default ();
 
   if (application->provider != NULL)
     {
@@ -183,6 +182,41 @@ theme_changed (GtkSettings *settings,
   g_free (resource);
 }
 
+static void
+theme_changed (GtkSettings   *settings,
+               GParamSpec    *pspec,
+               GfApplication *application)
+{
+  update_theme (application);
+}
+
+static void
+color_scheme_changed (GSettings     *settings,
+                      const char    *key,
+                      GfApplication *application)
+{
+  char *color_scheme;
+
+  color_scheme = g_settings_get_string (application->interface_settings, "color-scheme");
+
+  if (g_strcmp0 (color_scheme, "prefer-dark") == 0)
+    {
+      g_object_set (gtk_settings_get_default (),
+                    "gtk-application-prefer-dark-theme",
+                    TRUE,
+                    NULL);
+    }
+  else
+    {
+      gtk_settings_reset_property (gtk_settings_get_default (),
+                                   "gtk-application-prefer-dark-theme");
+    }
+
+  g_free (color_scheme);
+
+  update_theme (application);
+}
+
 static void
 settings_changed (GSettings   *settings,
                   const gchar *key,
@@ -259,6 +293,7 @@ gf_application_dispose (GObject *object)
     }
 
   g_clear_object (&application->settings);
+  g_clear_object (&application->interface_settings);
 
   g_clear_object (&application->provider);
 
@@ -330,14 +365,17 @@ gf_application_init (GfApplication *application)
                     G_CALLBACK (confirm_display_change_cb), application);
 
   application->settings = g_settings_new ("org.gnome.gnome-flashback");
+  application->interface_settings = g_settings_new ("org.gnome.desktop.interface");
   settings = gtk_settings_get_default ();
 
   g_signal_connect (application->settings, "changed",
                     G_CALLBACK (settings_changed), application);
   g_signal_connect (settings, "notify::gtk-theme-name",
                     G_CALLBACK (theme_changed), application);
+  g_signal_connect (application->interface_settings, "changed::color-scheme",
+                    G_CALLBACK (color_scheme_changed), application);
 
-  theme_changed (settings, NULL, application);
+  color_scheme_changed (application->interface_settings, NULL, application);
   settings_changed (application->settings, NULL, application);
 
   application->bus_name = g_bus_own_name (G_BUS_TYPE_SESSION,
-- 
2.44.0

