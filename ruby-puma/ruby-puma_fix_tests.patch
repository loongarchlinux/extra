diff --git a/test/test_binder.rb b/test/test_binder.rb
index 31d3ff86..c18fb85f 100644
--- a/test/test_binder.rb
+++ b/test/test_binder.rb
@@ -390,14 +390,6 @@ class TestBinderParallel < TestBinderBase
     assert_activates_sockets(url: url, port: port, sock: sock)
   end
 
-  def test_socket_activation_tcp_ipv6
-    skip_unless :unix
-    url = "::"
-    port = UniquePort.call
-    sock = Addrinfo.tcp(url, port).listen
-    assert_activates_sockets(url: url, port: port, sock: sock)
-  end
-
   def test_socket_activation_unix
     skip_if :jruby # Failing with what I think is a JRuby bug
     skip_unless :unix
diff --git a/test/test_config.rb b/test/test_config.rb
index ec8e21c6..e4d2c6f4 100644
--- a/test/test_config.rb
+++ b/test/test_config.rb
@@ -69,19 +69,6 @@ class TestConfigFile < TestConfigFileBase
     assert_equal [200, {}, ["embedded app"]], app.call({})
   end
 
-  def test_ssl_self_signed_configuration_from_DSL
-    skip_if :jruby
-    skip_unless :ssl
-    conf = Puma::Configuration.new do |config|
-      config.load "test/config/ssl_self_signed_config.rb"
-    end
-
-    conf.load
-
-    ssl_binding = "ssl://0.0.0.0:9292?&verify_mode=none"
-    assert_equal [ssl_binding], conf.options[:binds]
-  end
-
   def test_ssl_bind
     skip_if :jruby
     skip_unless :ssl
diff --git a/test/test_integration_ssl.rb b/test/test_integration_ssl.rb
index 88917fe7..608061f1 100644
--- a/test/test_integration_ssl.rb
+++ b/test/test_integration_ssl.rb
@@ -229,30 +229,6 @@ class TestIntegrationSSL < TestIntegration
     end
   end
 
-  def test_ssl_run_with_localhost_authority
-    skip_if :jruby
-
-    config = <<~RUBY
-      require 'localhost'
-      ssl_bind '#{HOST}', '#{bind_port}'
-
-      activate_control_app 'tcp://#{HOST}:#{control_tcp_port}', { auth_token: '#{TOKEN}' }
-
-      app do |env|
-        [200, {}, [env['rack.url_scheme']]]
-      end
-    RUBY
-
-    with_server(config) do |http|
-      body = nil
-      http.start do
-        req = Net::HTTP::Get.new '/', {}
-        http.request(req) { |resp| body = resp.body }
-      end
-      assert_equal 'https', body
-    end
-  end
-
   def test_ssl_run_with_encrypted_key
     skip_if :jruby
 
diff --git a/test/test_pumactl.rb b/test/test_pumactl.rb
index b3093bf9..2e9039c9 100644
--- a/test/test_pumactl.rb
+++ b/test/test_pumactl.rb
@@ -260,11 +260,6 @@ class TestPumaControlCli < TestConfigFileBase
     control_ssl '127.0.0.1'
   end
 
-  def test_control_ssl_ipv6
-    skip_unless :ssl
-    control_ssl '[::1]'
-  end
-
   def test_control_aunix
     skip_unless :aunix
 
@@ -289,29 +284,6 @@ class TestPumaControlCli < TestConfigFileBase
     assert_kind_of Thread, t.join, "server didn't stop"
   end
 
-  def test_control_ipv6
-    port = UniquePort.call '::1'
-    url = "tcp://[::1]:#{port}"
-
-    opts = [
-      "--control-url", url,
-      "--control-token", "ctrl",
-      "--config-file", "test/config/app.rb"
-    ]
-
-    control_cli = Puma::ControlCLI.new (opts + ["start"]), @ready, @ready
-    t = Thread.new do
-      control_cli.run
-    end
-
-    wait_booted
-
-    assert_command_cli_output opts + ["status"], "Puma is started"
-    assert_command_cli_output opts + ["stop"], "Command stop sent success"
-
-    assert_kind_of Thread, t.join, "server didn't stop"
-  end
-
   private
 
   def assert_command_cli_output(options, expected_out)
