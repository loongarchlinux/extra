# Maintainer: Anatol Pomozov <anatol.pomozov@gmail.com>
# Contributor: Gordian Edenhofer <gordian.edenhofer@gmail.com>
# Contributor: Troy Engel <troyengel+arch@gmail.com>

pkgbase=bcc
pkgname=('bcc' 'bcc-tools' 'python-bcc')
pkgver=0.30.0
pkgrel=3
pkgdesc='BPF Compiler Collection'
arch=('loong64' 'x86_64')
url='https://github.com/iovisor/bcc'
license=('Apache-2.0')
makedepends=('cmake' 'clang' 'llvm' 'flex' 'bison' 'libbpf' 'python' 'python-setuptools')
# checkdepends=('netperf' 'iperf')
source=("bcc-$pkgver.tar.gz"::"https://github.com/iovisor/bcc/releases/download/v$pkgver/bcc-src-with-submodule.tar.gz")
sha512sums=('6ab30533675b96f21b48d503b6d7a15ccbdf54dfc823ce26b56c2a24dd3e670824542e1bc8766fda4a5bff879146dcdabf87da3511205ee99ef9b5b17f0fab38')

_pick() {
  local p="$1" f d; shift
  for f; do
    d="$srcdir/$p/${f#$pkgdir/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done
}

build() {
  local cmake_options=(
    -B build
    -D CMAKE_BUILD_TYPE=None
    -D CMAKE_INSTALL_PREFIX=/usr
    -D CMAKE_INSTALL_LIBDIR=/usr/lib
    -D CMAKE_USE_LIBBPF_PACKAGE=ON
    -D ENABLE_LLVM_SHARED=1  # https://bugs.archlinux.org/task/71163
    -D ENABLE_TESTS=OFF
    -D REVISION=$pkgver
    -D RUN_LUA_TESTS=OFF
    -S $pkgbase
    -W no-dev
  )

  export CFLAGS+=" -ffat-lto-objects"
  export CXXFLAGS+=" -ffat-lto-objects"

  cmake "${cmake_options[@]}"
  cmake --build build --verbose
}

package_bcc() {
  pkgdesc='BPF Compiler Collection - C library and examples'
  depends=('clang' 'gcc-libs' 'glibc' 'libbpf' 'libbpf.so' 'libelf' 'llvm-libs' 'python' 'xz' 'zlib')
  optdepends=('linux-headers: build modules against the Arch kernel'
    'linux-lts-headers: build modules against the LTS kernel'
    'linux-zen-headers: build modules against the ZEN kernel'
    'linux-hardened-headers: build modules against the HARDENED kernel'
    'bcc-tools: Python utilites using the BCC library'
    'python-bcc: Python 3 bindings for BCC'
    'luajit: Lua bindings for BCC')
  provides=('bcc' 'libbcc')

  DESTDIR="$pkgdir" cmake --install build

  cd "$pkgdir"
  _pick bcc-tools usr/share/bcc/{tools,man}
  _pick python-bcc usr/lib/python*
}

package_bcc-tools() {
  pkgdesc='BPF Compiler Collection - Tools'
  depends=('bash' 'bcc' 'libedit' 'ethtool' 'python' 'python-bcc' 'python-dnslib')

  mv -v $pkgname/* "$pkgdir/"
}

package_python-bcc() {
  pkgdesc='BPF Compiler Collection - Python 3 bindings'
  depends=('bcc' 'python')
  optdepends=(
    'python-netaddr: Network address representation and manipulation'
    'python-pyroute2: Netlink and Linux network configuration'
  )

  mv -v $pkgname/* "$pkgdir/"

  # compile Python bytecode as cmake does not do that (properly) for us
  python -m compileall -d /usr/lib "$pkgdir/usr/lib"
  python -O -m compileall -d /usr/lib "$pkgdir/usr/lib"
}
