From 3e5c6887e840643fdbe7358de4bb31d726d0ce1b Mon Sep 17 00:00:00 2001
From: Adam Greene <github@mzpqnxow.com>
Date: Wed, 24 Jan 2024 08:31:00 -0500
Subject: [PATCH] fix #667 (Python 3.12 compatibility)

---
 src/binwalk/core/module.py | 12 ++++++++++--
 src/binwalk/core/plugin.py | 15 ++++++++++++---
 2 files changed, 22 insertions(+), 5 deletions(-)

diff --git a/src/binwalk/core/module.py b/src/binwalk/core/module.py
index 523c1048..1ae209a4 100644
--- a/src/binwalk/core/module.py
+++ b/src/binwalk/core/module.py
@@ -704,14 +704,22 @@ def list(self, attribute="run"):
                 modules[module] = module.PRIORITY
 
         # user-defined modules
-        import imp
+        try:
+            import imp
+            load_module_source = imp.load_source
+        except ImportError:
+            # Python 3.12 compatibility
+            import importlib.machinery
+            load_module_source = importlib.machinery.SourceFileLoader
+
         user_modules = binwalk.core.settings.Settings().user.modules
+
         for file_name in os.listdir(user_modules):
             if not file_name.endswith('.py'):
                 continue
             module_name = file_name[:-3]
             try:
-                user_module = imp.load_source(module_name, os.path.join(user_modules, file_name))
+                user_module = load_module_source(module_name, os.path.join(user_modules, file_name))
             except KeyboardInterrupt as e:
                 raise e
             except Exception as e:
diff --git a/src/binwalk/core/plugin.py b/src/binwalk/core/plugin.py
index a83f21a6..964c95db 100644
--- a/src/binwalk/core/plugin.py
+++ b/src/binwalk/core/plugin.py
@@ -1,7 +1,16 @@
 # Core code for supporting and managing plugins.
 
 import os
-import imp
+
+try:
+    import imp
+    load_module_source = imp.load_source
+except ImportError:
+    # Python 3.12 compatibility
+    import importlib.machinery
+    load_module_source = importlib.machinery.SourceFileLoader
+
+
 import inspect
 import binwalk.core.common
 import binwalk.core.settings
@@ -180,7 +189,7 @@ def list_plugins(self):
                         module = file_name[:-len(self.MODULE_EXTENSION)]
 
                         try:
-                            plugin = imp.load_source(module, os.path.join(plugins[key]['path'], file_name))
+                            plugin = load_module_source(module, os.path.join(plugins[key]['path'], file_name))
                             plugin_class = self._find_plugin_class(plugin)
 
                             plugins[key]['enabled'][module] = True
@@ -222,7 +231,7 @@ def _load_plugin_modules(self, plugins):
                 continue
 
             try:
-                plugin = imp.load_source(module, file_path)
+                plugin = load_module_source(module, file_path)
                 plugin_class = self._find_plugin_class(plugin)
 
                 class_instance = plugin_class(self.parent)
