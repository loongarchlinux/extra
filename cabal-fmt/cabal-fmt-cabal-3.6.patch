From 8ce3f04b2c9cedeaf763a6deaf4c58db7a74e602 Mon Sep 17 00:00:00 2001
From: Oleg Grenrus <oleg.grenrus@iki.fi>
Date: Mon, 23 Aug 2021 09:59:12 +0300
Subject: [PATCH] Use Cabal-3.6

---
 cabal-fmt.cabal                                  | 2 +-
 src/CabalFmt/Fields/BuildDepends.hs              | 5 ++++-
 src/CabalFmt/Fields/TestedWith.hs                | 6 +++---
 src/CabalFmt/Refactoring/ExpandExposedModules.hs | 3 ++-
 4 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/cabal-fmt.cabal b/cabal-fmt.cabal
index 5f0ef0e..a981f6b 100644
--- a/cabal-fmt.cabal
+++ b/cabal-fmt.cabal
@@ -30,7 +30,7 @@ library cabal-fmt-internal
   build-depends:
     , base        ^>=4.11.1.0 || ^>=4.12.0.0 || ^>=4.13.0.0 || ^>=4.14.0.0
     , bytestring  ^>=0.10.8.2
-    , Cabal       ^>=3.4.0.0
+    , Cabal       ^>=3.6.0.0
     , containers  ^>=0.5.11.0 || ^>=0.6.0.1
     , directory   ^>=1.3.1.5
     , filepath    ^>=1.4.2
diff --git a/src/CabalFmt/Fields/BuildDepends.hs b/src/CabalFmt/Fields/BuildDepends.hs
index 16fa840..779424f 100644
--- a/src/CabalFmt/Fields/BuildDepends.hs
+++ b/src/CabalFmt/Fields/BuildDepends.hs
@@ -2,6 +2,7 @@
 -- License: GPL-3.0-or-later
 -- Copyright: Oleg Grenrus
 {-# LANGUAGE OverloadedStrings #-}
+{-# OPTIONS_GHC -Wno-deprecations #-}
 module CabalFmt.Fields.BuildDepends (
     buildDependsF,
     setupDependsF,
@@ -15,10 +16,12 @@ import qualified Distribution.Types.Dependency      as C
 import qualified Distribution.Types.DependencyMap   as C
 import qualified Distribution.Types.PackageName     as C
 import qualified Distribution.Types.Version         as C
-import qualified Distribution.Types.VersionInterval as C
+import qualified Distribution.Types.VersionInterval.Legacy as C
 import qualified Distribution.Types.VersionRange    as C
 import qualified Text.PrettyPrint                   as PP
 
+import qualified Distribution.Types.VersionInterval.Legacy as C ()
+
 import CabalFmt.Fields
 import CabalFmt.Options
 import CabalFmt.Prelude
diff --git a/src/CabalFmt/Fields/TestedWith.hs b/src/CabalFmt/Fields/TestedWith.hs
index 4217300..f435c89 100644
--- a/src/CabalFmt/Fields/TestedWith.hs
+++ b/src/CabalFmt/Fields/TestedWith.hs
@@ -11,15 +11,15 @@ import qualified Data.Map.Strict               as Map
 import qualified Data.Set                      as Set
 import qualified Distribution.CabalSpecVersion as C
 import qualified Distribution.Compiler         as C
+import qualified Distribution.FieldGrammar     as C
 import qualified Distribution.Parsec           as C
-import qualified Distribution.FieldGrammar as C
 import qualified Distribution.Pretty           as C
 import qualified Distribution.Version          as C
 import qualified Text.PrettyPrint              as PP
 
-import CabalFmt.Prelude
 import CabalFmt.Fields
 import CabalFmt.Options
+import CabalFmt.Prelude
 
 testedWithF :: Options -> FieldDescrs () ()
 testedWithF Options { optSpecVersion = ver } = singletonF "tested-with" pretty parse where
@@ -56,7 +56,7 @@ leadingComma v xs = PP.vcat $ zipWith comma (True : repeat False) xs where
 isVersionSet :: C.VersionRange -> Maybe (Set C.Version)
 isVersionSet vr = go Set.empty (C.asVersionIntervals vr) where
     go !acc [] = Just acc
-    go acc ((C.LowerBound v C.InclusiveBound, C.UpperBound u C.InclusiveBound) : vis)
+    go acc (C.VersionInterval (C.LowerBound v C.InclusiveBound) (C.UpperBound u C.InclusiveBound) : vis)
         | v == u    = go (Set.insert v acc) vis
     go _ _ = Nothing
 
diff --git a/src/CabalFmt/Refactoring/ExpandExposedModules.hs b/src/CabalFmt/Refactoring/ExpandExposedModules.hs
index 3819c24..f9bfd8d 100644
--- a/src/CabalFmt/Refactoring/ExpandExposedModules.hs
+++ b/src/CabalFmt/Refactoring/ExpandExposedModules.hs
@@ -3,6 +3,7 @@
 -- Copyright: Oleg Grenrus
 {-# LANGUAGE OverloadedStrings #-}
 {-# LANGUAGE RankNTypes        #-}
+{-# OPTIONS_GHC -Wno-deprecations #-}
 module CabalFmt.Refactoring.ExpandExposedModules (
     refactoringExpandExposedModules,
     ) where
@@ -28,7 +29,7 @@ refactoringExpandExposedModules (C.Field name@(C.Name (_, pragmas) _n) fls) = do
             , file <- files'
             , let parts = splitDirectories $ dropExtension file
             , all C.validModuleComponent parts
-            , let mn = C.fromComponents parts
+            , let mn = C.fromComponents parts -- TODO: don't use fromComponents
             , mn `notElem` mns
             ]
 
