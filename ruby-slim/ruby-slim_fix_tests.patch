diff --git a/test/core/test_embedded_engines.rb b/test/core/test_embedded_engines.rb
index f06700a..60400b8 100644
--- a/test/core/test_embedded_engines.rb
+++ b/test/core/test_embedded_engines.rb
@@ -6,7 +6,7 @@ class TestSlimEmbeddedEngines < TestSlim
   def test_render_with_markdown
     source = %q{
 markdown:
-  #Header
+  # Header
   Hello from #{"Markdown!"}
 
   #{1+2}
@@ -24,13 +24,13 @@ markdown:
       assert_html "<h1>Header</h1>\n\n<p>Hello from Markdown!</p>\n\n<p>3</p>\n\n<p><a href=\"#2\">1</a></p>\n\n<ul>\n<li>one</li>\n<li>two</li>\n</ul>\n\n", source
     else
       # kramdown, :auto_ids by default
-      assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n\n<p>3</p>\n\n<p><a href=\"#2\">1</a></p>\n\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n", source
+      assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n<p>3</p>\n<p><a href=\"#2\">1</a></p>\n<ul>\n<li>one</li>\n<li>two</li>\n</ul>", source
 
       Slim::Embedded.with_options(markdown: {auto_ids: false}) do
-        assert_html "<h1>Header</h1>\n<p>Hello from Markdown!</p>\n\n<p>3</p>\n\n<p><a href=\"#2\">1</a></p>\n\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n", source
+        assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n<p>3</p>\n<p><a href=\"#2\">1</a></p>\n<ul>\n<li>one</li>\n<li>two</li>\n</ul>", source
       end
 
-      assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n\n<p>3</p>\n\n<p><a href=\"#2\">1</a></p>\n\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n", source
+      assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n<p>3</p>\n<p><a href=\"#2\">1</a></p>\n<ul>\n<li>one</li>\n<li>two</li>\n</ul>", source
     end
   end
 
diff --git a/test/translator/test_translator.rb b/test/translator/test_translator.rb
index 9073ac8..77e228d 100644
--- a/test/translator/test_translator.rb
+++ b/test/translator/test_translator.rb
@@ -37,6 +37,9 @@ markdown:
     when /kramdown/
       assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n\n<p>3</p>\n\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n", source, tr_mode: :dynamic
       assert_html "<h1 id=\"header\">Header</h1>\n<p>Hello from Markdown!</p>\n\n<p>3</p>\n\n<ul>\n  <li>one</li>\n  <li>two</li>\n</ul>\n", source, tr_mode: :static
+    when /pandoctemplate/
+      assert_html "<p>#Header Hello from Markdown!</p>\n<p>3</p>\n<ul>\n<li>one</li>\n<li>two</li>\n</ul>", source, tr_mode: :dynamic
+      assert_html "<p>#Header Hello from Markdown!</p>\n<p>3</p>\n<ul>\n<li>one</li>\n<li>two</li>\n</ul>", source, tr_mode: :static
     else
       raise "Missing test for #{Tilt['md']}"
     end
