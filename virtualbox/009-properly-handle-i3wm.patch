diff --git a/src/VBox/Frontends/VirtualBox/src/globals/UIDesktopWidgetWatchdog.cpp b/src/VBox/Frontends/VirtualBox/src/globals/UIDesktopWidgetWatchdog.cpp
index 01aa93c6..06a78ac1 100644
--- a/src/VBox/Frontends/VirtualBox/src/globals/UIDesktopWidgetWatchdog.cpp
+++ b/src/VBox/Frontends/VirtualBox/src/globals/UIDesktopWidgetWatchdog.cpp
@@ -391,7 +391,8 @@ QRect UIDesktopWidgetWatchdog::availableGeometry(QScreen *pScreen) const
     /* Get cached available-geometry: */
     const QRect availableGeometry = m_availableGeometryData.value(screenToIndex(pScreen));
     /* Return cached available-geometry if it's valid or screen-geometry otherwise: */
-    return availableGeometry.isValid() ? availableGeometry : screenGeometry(pScreen);
+    return availableGeometry.isValid() && NativeWindowSubsystem::X11WindowManagerType() != X11WMType_i3 ?
+           availableGeometry : screenGeometry(pScreen);
 # endif /* !VBOX_GUI_WITH_CUSTOMIZATIONS1 */
 #else /* !VBOX_WS_X11 */
     /* Just return screen available-geometry: */
diff --git a/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.cpp b/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.cpp
index e8b8db43..8c8ebdca 100644
--- a/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.cpp
+++ b/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.cpp
@@ -115,6 +115,9 @@ X11WMType NativeWindowSubsystem::X11WindowManagerType()
                 else
                 if (QString((const char*)pcData).contains("Xfwm4", Qt::CaseInsensitive))
                     wmType = X11WMType_Xfwm4;
+                else
+                if (QString((const char*)pcData).contains("i3", Qt::CaseInsensitive))
+                    wmType = X11WMType_i3;
                 if (pcData)
                     XFree(pcData);
             }
diff --git a/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.h b/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.h
index 12b4a172..dae12f25 100644
--- a/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.h
+++ b/src/VBox/Frontends/VirtualBox/src/platform/x11/VBoxUtils-x11.h
@@ -49,6 +49,7 @@ enum X11WMType
     X11WMType_Metacity,
     X11WMType_Mutter,
     X11WMType_Xfwm4,
+    X11WMType_i3,
 };
 
 /** X11: Screen-saver inhibit methods. */
@@ -95,7 +96,7 @@ namespace NativeWindowSubsystem
     /** X11: Determines and returns whether the compositing manager is running. */
     bool X11IsCompositingManagerRunning();
     /** X11: Determines and returns current Window Manager type. */
-    X11WMType X11WindowManagerType();
+    SHARED_LIBRARY_STUFF X11WMType X11WindowManagerType();
 
     /** X11: Returns true if XLib extension with name @p extensionName is avaible, false otherwise. */
     bool X11CheckExtension(const char *extensionName);
diff --git a/src/VBox/Frontends/VirtualBox/src/widgets/UIMiniToolBar.cpp b/src/VBox/Frontends/VirtualBox/src/widgets/UIMiniToolBar.cpp
index 8ac46c99..5b749947 100644
--- a/src/VBox/Frontends/VirtualBox/src/widgets/UIMiniToolBar.cpp
+++ b/src/VBox/Frontends/VirtualBox/src/widgets/UIMiniToolBar.cpp
@@ -1076,6 +1076,10 @@ void UIMiniToolBar::prepare()
     /* Enable translucency through Qt API if supported: */
     if (uiCommon().isCompositingManagerRunning())
         setAttribute(Qt::WA_TranslucentBackground);
+
+    if (NativeWindowSubsystem::X11WindowManagerType() == X11WMType_i3)
+         setWindowFlags(Qt::FramelessWindowHint);
+
 #endif /* VBOX_WS_X11 */
 
     /* Make sure we have no focus: */
