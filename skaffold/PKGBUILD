# Maintainer: Christian Rebischke <chris.rebischke@archlinux.org>
# Maintainer: Andreas 'Segaja' Schleifer <segaja at archlinux dot org>
# Maintainer: Fredy Garc√≠a <frealgagu at gmail dot com>
# Maintainer: Maxim Baz <${pkgname} at maximbaz dot com>
# Contributor: Stefan Cocora <stefan dot cocora at gmail dot com>

pkgname=skaffold
pkgver=2.13.1
pkgrel=1
pkgdesc="A command line tool that facilitates continuous development for Kubernetes applications"
arch=("loong64" "x86_64")
url="https://github.com/GoogleContainerTools/skaffold"
license=("Apache-2.0")
depends=(
  "docker"
  "kompose"
)
makedepends=(
  "git"
  "go"
  "go-licenses"
  "python"
)
optdepends=(
  "minikube: To use Minikube"
  "kubectl: For Kubernetes support"
  "bash-completion: Tab autocompletion"
)
options=(!lto)
source=("$pkgname::git+$url.git#tag=v$pkgver")
sha512sums=('b8a89c62ae47ae417289be067e4c79a30634eba78826e994376d9b05e3bb199f87783bab3f9aa025a465db51dda82ffdb7864912e3168718c944674e86688523')
b2sums=('12d950fa7e692b03e8a88aa782b97e2ef416b9681b053c23ce525fa3cd323accadfddf7077f3141f4374fe9af215113dd94f3e5f2ebd112c06bfb4df43e10a8d')

prepare() {
  cd "${pkgname}"

  GOFLAGS="-mod=readonly" go mod vendor -v

  # Remove Go flag -race as it is incompatible with -buildmode=pie.
  sed -i 's/-race//g' Makefile Makefile.diag
  # Remove check that requires running Docker.
  sed -i '/test-generated-proto/d' hack/checks.sh
}

build() {
  cd "${pkgname}"

  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOFLAGS='-buildmode=pie -mod=vendor -modcacherw -x -v -ldflags=-linkmode=external'
  export GOPATH="${srcdir}"

  VERSION="${pkgver}" make
}

check() {
  cd "${pkgname}"

  # Don't call the `test` target as it does unnecessary linter tests.
  make unit-tests
  make checks
  make -f Makefile.diag test
}

package() {
  cd "${pkgname}"

  install -Dm755 -t "${pkgdir}/usr/bin" out/skaffold
  ./out/skaffold completion bash \
    | install -Dm644 /dev/stdin "${pkgdir}/usr/share/bash-completion/completions/skaffold"
  ./out/skaffold completion zsh \
    | install -Dm644 /dev/stdin "${pkgdir}/usr/share/zsh/site-functions/_skaffold"
  ./out/skaffold completion fish \
    | install -Dm644 /dev/stdin "${pkgdir}/usr/share/fish/vendor_completions.d/skaffold.fish"
}
